--디자인샵 정규화
--컬럼 : BOOKCODE(책코드), BOOKNAME(책이름), GUBUN(분류코드), PUBCODE(출판사코드), PRICE(가격), SALEPER(할인율), REGDATE(등록일자)

--카테고리 코드
DROP TABLE LCATE;

CREATE TABLE LCATE(
LCODE CHAR(3),
LNAME VARCHAR2(50) NOT NULL,
CONSTRAINT PK_LCATE_LCODE PRIMARY KEY (LCODE)
);

INSERT INTO LCATE (LCODE,LNAME)  VALUES ('C01','문구');
INSERT INTO LCATE (LCODE,LNAME)  VALUES ('C02','리빙');
INSERT INTO LCATE (LCODE,LNAME)  VALUES ('C03','패션');
INSERT INTO LCATE (LCODE,LNAME)  VALUES ('C04','가전');

SELECT * FROM LCATE;

--브랜드 코드
DROP TABLE BRAND;

CREATE TABLE BRAND(
BCODE CHAR(3),
BNAME VARCHAR2(50) NOT NULL,
CONSTRAINT PK_BRAND_BCODE PRIMARY KEY (BCODE)
);

INSERT INTO BRAND (BCODE,BNAME)  VALUES ('B01','울랄라');
INSERT INTO BRAND (BCODE,BNAME)  VALUES ('B02','노메스');
INSERT INTO BRAND (BCODE,BNAME)  VALUES ('B03','스위치');
INSERT INTO BRAND (BCODE,BNAME)  VALUES ('B04','오아');

SELECT * FROM BRAND;


--상품 코드
DROP TABLE PRODUCT;

CREATE TABLE PRODUCT(
PCODE CHAR(4),
PNAME VARCHAR2(50) NOT NULL,
LCODE CHAR(3) NOT NULL,
BCODE CHAR(3) NOT NULL,
PRICE NUMBER(10) DEFAULT 0 NOT NULL,
SALEPER NUMBER(5,2),
REGDATE DATE DEFAULT SYSDATE,
CONSTRAINT PK_PRODUCT_PCODE PRIMARY KEY (PCODE),
CONSTRAINT FK_PRODUCT_GCODE FOREIGN KEY (LCODE) REFERENCES LCATE(LCODE),
CONSTRAINT FK_PRODUCT_BCODE FOREIGN KEY (BCODE) REFERENCES BRAND(BCODE)
);

INSERT INTO PRODUCT (PCODE,PNAME,LCODE,BCODE,PRICE,SALEPER)  VALUES ('P001','가습기','C04','B04',15000,0.2);
INSERT INTO PRODUCT (PCODE,PNAME,LCODE,BCODE,PRICE,SALEPER)  VALUES ('P002','키치백','C03','B03',10000,0.1);
INSERT INTO PRODUCT (PCODE,PNAME,LCODE,BCODE,PRICE,SALEPER)  VALUES ('P003','스프링노트','C01','B01',8000,0.1);
INSERT INTO PRODUCT (PCODE,PNAME,LCODE,BCODE,PRICE)  VALUES ('P004','페브릭포스터','C02','B02',14000);

SELECT * FROM PRODUCT;


--판매 테이블
DROP TABLE PSALES;

CREATE TABLE PSALES(
SEQ NUMBER(7),
SALEDATE CHAR(10) NOT NULL,
PCODE CHAR(4) NOT NULL,
QTY NUMBER(3),
AMOUNT NUMBER(10) NOT NULL,
REGDATE DATE DEFAULT SYSDATE,
CONSTRAINT PK_PSALES_SEQ PRIMARY KEY (SEQ),
CONSTRAINT FK_PSAELS_PCODE FOREIGN KEY (PCODE) REFERENCES PRODUCT(PCODE)
);

-- 자동으로 SEQ 증가
INSERT INTO BSALES (SEQ,SALEDATE,BOOKCODE,QTY,AMOUNT) VALUES ((SELECT NVL(MAX(SEQ) + 1,1) FROM BSALES),'2021-04-30','B001', 2, 28000);
INSERT INTO BSALES (SEQ,SALEDATE,BOOKCODE,QTY,AMOUNT) VALUES (2,'2021-04-30','B002',3, 21000);
--시퀀스를 이용한 자동으로 SEQ 증가
INSERT INTO PSALES (SEQ,SALEDATE,PCODE,QTY,AMOUNT) VALUES (S_SEQ.NEXTVAL,'2021-05-05','P003',1, 7200);
INSERT INTO PSALES (SEQ,SALEDATE,PCODE,QTY,AMOUNT) VALUES (S_SEQ.NEXTVAL,'2021-05-05','P001',2, 24000);
INSERT INTO PSALES (SEQ,SALEDATE,PCODE,QTY,AMOUNT) VALUES (S_SEQ.NEXTVAL,'2021-05-06','P001',1, 1200);
INSERT INTO PSALES (SEQ,SALEDATE,PCODE,QTY,AMOUNT) VALUES (S_SEQ.NEXTVAL,'2021-05-06','P003',3, 21600);
INSERT INTO PSALES (SEQ,SALEDATE,PCODE,QTY,AMOUNT) VALUES (S_SEQ.NEXTVAL,'2021-05-07','P002',2, 18000);
INSERT INTO PSALES (SEQ,SALEDATE,PCODE,QTY,AMOUNT) VALUES (S_SEQ.NEXTVAL,'2021-05-08','P004',1, 14000);
INSERT INTO PSALES (SEQ,SALEDATE,PCODE,QTY,AMOUNT) VALUES (S_SEQ.NEXTVAL,'2021-05-09','P002',4, 36000);

--전체판매리스트
SELECT S.SALEDATE, S.SEQ, S.PCODE, P.PNAME, S.QTY, S.AMOUNT
FROM PSALES S INNER JOIN PRODUCT P ON (S.PCODE = P.PCODE);

--가장 큰 SEQ 조회
SELECT NVL(MAX(SEQ) + 1,1) FROM BSALES;


--시퀀스 생성
DROP SEQUENCE P_SEQ;
CREATE SEQUENCE P_SEQ;
SELECT S_SEQ.NEXTVAL FROM DUAL;  --자동 번호 증가


SELECT * FROM PSALES;


--기간안의 매출 조회 리스트
SELECT *
FROM PSALES
WHERE SALEDATE > '2021-05-05';

SELECT *
FROM BSALES S INNER JOIN BOOK2 B ON (S.BOOKCODE = B.BOOKCODE)
WHERE SALEDATE
BETWEEN '2021-04-28' AND '2021-04-30';



--책코드의 매출 조회 리스트
SELECT S.BOOKCODE, SUM(S.AMOUNT)
FROM BSALES S INNER JOIN BOOK2 B ON (S.BOOKCODE = B.BOOKCODE)
GROUP BY S.BOOKCODE;


--아래 다 그룹바이
--일자별 매출 조회(세일로 그룹바이) 집계 / 2개 조인
SELECT SALEDATE, SUM(AMOUNT)
FROM BSALES
GROUP BY SALEDATE;


-- 책 코드별 매출 조회 집계
SELECT S.BOOKCODE, SUM(S.AMOUNT)
FROM BSALES S INNER JOIN BOOK2 B ON(S.BOOKCODE = B.BOOKCODE)
GROUP BY S.BOOKCODE;



--품목별 매출 합계 집계  3개 조인
SELECT G.GNAME ,B.GCODE, SUM(S.AMOUNT) AMOUNT
FROM BSALES S INNER JOIN BOOK2 B ON(S.BOOKCODE = B.BOOKCODE)
INNER JOIN GUBUN G ON (B.GCODE = G.GCODE)
GROUP BY B.GCODE, G.GNAME;


SELECT G.GNAME ,B.GCODE, SUM(S.AMOUNT) AMOUNT
FROM BSALES S INNER JOIN BOOK2 B ON(S.BOOKCODE = B.BOOKCODE)
INNER JOIN GUBUN G ON (B.GCODE = G.GCODE)
GROUP BY B.GCODE, G.GNAME;

--조인 방법 2
SELECT*
FROM BSALES S, BOOK2 B, GUBUN G
WHERE S.BOOKCODE = B.BOOKCODE (+) 
AND B.GCODE = G.GCODE;


--출판사별 매출 조회 집계
SELECT P.PCODE, MAX(P.PNAME), SUM(S.AMOUNT)
FROM BSALES S LEFT JOIN BOOK2 B ON(S.BOOKCODE = B.BOOKCODE)
RIGHT JOIN PUB P ON (B.PCODE = P.PCODE)
GROUP BY P.PCODE;






COMMIT;
